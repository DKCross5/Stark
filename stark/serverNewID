import asyncio
import websockets
import uuid
import json 
import time

clients = {}
async def get_names():
    return list(clients.items())

async def retrieve_names():
    await asyncio.sleep(10) 
    names = await get_names()
    print("connected clients:", names)

async def get_ID(websocket):
    client_id_key = str(uuid.uuid4())
    try:
        print(f"Client {client_id_key} connected")
        while True:
            JSONRaw = await websocket.recv()
            json_string = json.loads(JSONRaw)
            print(f"Recieved from client: {json_string}")
            response = json.dumps({"Status":"Success"})
            await websocket.send(response)
            clients[json_string["Name"] +'-'+ client_id_key] = websocket
            print(json_string["Name"])  #prints: ESP2
            time.sleep(1)
    except websockets.ConnectionClosed:
        print(f"Client {client_id_key} disconnected")
async def main():
    server = await websockets.serve(get_ID, "localhost", 8765, ping_interval = None, ping_timeout=None)
    asyncio.create_task(retrieve_names())
    await server.serve_forever()
    
if __name__ == "__main__":
    asyncio.run(main())