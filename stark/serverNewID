import asyncio
import websockets
import uuid
import json 

clients = {}
async def get_names():
    return list(clients.items())

async def retrieve_names():
    await asyncio.sleep(10) 
    names = await get_names()
    print("connected clients:", names)

async def get_ID(websocket):
    client_id_key = str(uuid.uuid4())
    try:
        print(f"Client {client_id_key} connected")
        Identity = await websocket.recv()
        processed_ID = json.loads(Identity)
        print(f"Recieved from client: {processed_ID}")
        response = json.dumps({"Status":"Success"})
        await websocket.send(response)
        clients[processed_ID["name"] +'-'+ client_id_key] = websocket
        print(processed_ID["name"])
    except websockets.ConnectionClosed:
        print(f"Client {client_id_key} disconnected")
async def main():
    server = await websockets.serve(get_ID, "localhost", 8765)
    asyncio.create_task(retrieve_names())
    await server.serve_forever()
    
if __name__ == "__main__":
    asyncio.run(main())
